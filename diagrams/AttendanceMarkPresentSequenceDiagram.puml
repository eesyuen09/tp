@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AttendanceCommandParser" as AttendanceCommandParser LOGIC_COLOR
participant "command:AttendanceMarkPresentCommand" as AttendanceMarkPresentCommand LOGIC_COLOR
participant "commandResult :CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":Person" as Person MODEL_COLOR
end box

[-> LogicManager : execute("att -p s/0001 d/10112025 t/Math")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("att -p s/0001 d/10112025 t/Math")
activate AddressBookParser

create AttendanceCommandParser
AddressBookParser -> AttendanceCommandParser
activate AttendanceCommandParser

AttendanceCommandParser --> AddressBookParser
deactivate AttendanceCommandParser

AddressBookParser -> AttendanceCommandParser : parse("-m s/0001 d/10112025 t/Math")
activate AttendanceCommandParser

create AttendanceMarkPresentCommand
AttendanceCommandParser -> AttendanceMarkPresentCommand
activate AttendanceMarkPresentCommand

AttendanceMarkPresentCommand --> AttendanceCommandParser
deactivate AttendanceMarkPresentCommand

AttendanceCommandParser --> AddressBookParser : command
deactivate AttendanceCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
AttendanceCommandParser -[hidden]-> AddressBookParser
destroy AttendanceCommandParser

AddressBookParser --> LogicManager : command
deactivate AddressBookParser

LogicManager -> AttendanceMarkPresentCommand : execute(model)
activate AttendanceMarkPresentCommand

AttendanceMarkPresentCommand -> Model : getPersonById(studentId)
activate Model

Model --> AttendanceMarkPresentCommand : person
deactivate Model

AttendanceMarkPresentCommand -> Person : getTags()
activate Person
Person --> AttendanceMarkPresentCommand : classTags
deactivate Person

AttendanceMarkPresentCommand -> Person : getAttendanceList()
activate Person
Person --> AttendanceMarkPresentCommand : attendanceList
deactivate Person

AttendanceMarkPresentCommand -> Model : markAttendancePresent(studentId, date, classTag)
activate Model
Model --> AttendanceMarkPresentCommand
deactivate Model

create CommandResult
AttendanceMarkPresentCommand -> CommandResult
activate CommandResult

CommandResult --> AttendanceMarkPresentCommand
deactivate CommandResult

AttendanceMarkPresentCommand --> LogicManager : commandResult
deactivate AttendanceMarkPresentCommand

[<--LogicManager
deactivate LogicManager
@enduml
