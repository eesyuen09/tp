@startuml
!include style.puml
skinparam ArrowFontStyle plain

title FeeViewCommand Activity Diagram

start

:User enters `fee -v s/0001 [m/MMYY]`;
:LogicManager parses and executes FeeViewCommand;

:Find student by Student ID;
if () then ([Student found])
  :Get student's enrolled month;
  :Set start month = user input (if any), else enrolled month;
  :Set end month = current month;

  if () then ([Start month in future])
    :Show error message: "Month cannot be in the future";
    stop
  else ([else])
    :If start month is before enrollment, use enrolled month instead;
    :Initialize empty payment history list;
    :Start looping from effective start month to current month;

    while () is ([Within date range])
      :Check if payment record exists for this month;
      if () then ([Record found])
        :Use stored status (PAID / UNPAID);
      else ([else])
        :Mark as UNPAID by default;
      endif
      :Add entry to fee history;
      :Move to next month;
    endwhile ([else])

    :Display compiled fee history to user;
  endif
else ([else])
  :Show error message: "Student not found";
endif

stop
@enduml

