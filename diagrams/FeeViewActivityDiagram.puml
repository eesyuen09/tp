@startuml
!include style.puml
skinparam ArrowFontStyle plain

title FeeViewCommand Activity Diagram

start

:User enters `fee -v s/0001 [m/MMYY]`;
:LogicManager parses and executes FeeViewCommand;

:Find student by Student ID;
if () then ([Student found])
  :Get student's enrolled month;
  if () then ([Enrolled month present])
    :Set requested start = user input (if any), else enrolled month;
    :Compute effective start = max(requested start, enrolled month);
    :Set end month = current month;

    if () then ([Effective start > current month])
      :Show error message;
      stop
    else ([else])
      :Initialize empty payment history list;
      :Start looping from effective start to current month (inclusive);

      while () is ([Within date range])
        :Check explicit fee record for this month;
        if () then ([Explicit record exists])
          :Use recorded status (PAID / UNPAID);
          :Set isExplicit = true;
        else ([else])
          :Use default status = UNPAID;
          :Set isExplicit = false;
        endif
        :Add entry {month, status, isExplicit} to fee history;
        :Move to next month;
      endwhile ([else])

      :Reverse list to newest-first (latest month first);
      :Display compiled fee history to user;
    endif
  else ([else])
    :Show error message;
  endif
else ([else])
  :Show error message;
endif

stop
@enduml
